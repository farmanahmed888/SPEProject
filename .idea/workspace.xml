<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c021f9aa-2a17-46c9-8d3e-5c10ddd09a7d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/deployk8s.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/.idea/k8s.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/backend/secret.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/elastic/elasticsearch-deployment.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/elastic/kibana-deployment.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/elastic/logstash-deployment.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/k8s/frontend/codeeditor-frontend.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/roles/deploy-backend/tasks/main.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/roles/deploy-db/tasks/main.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/roles/deploy-elastic/tasks/main.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/roles/deploy-frontend/tasks/main.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/roles/pull-docker-images/tasks/main.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/candidate-service/src/main/java/com/hackerrank/candidate_service/Controller/CandidateController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/candidate-service/src/main/java/com/hackerrank/candidate_service/Controller/CandidateController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/interviewer-service/src/main/java/com/hackerrank/interviewer_service/Controller/InterviewerController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/interviewer-service/src/main/java/com/hackerrank/interviewer_service/Controller/InterviewerController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/logs/interviewer-service.log" beforeDir="false" afterPath="$PROJECT_DIR$/backend/logs/interviewer-service.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/candidate/src/pages/AppliedJobs.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/candidate/src/pages/AppliedJobs.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/candidate/src/pages/Login.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/candidate/src/pages/Login.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/candidate/src/pages/ViewJobs.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/candidate/src/pages/ViewJobs.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/interviewer/src/config.js" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/interviewer/src/config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jars/candidate-service.jar" beforeDir="false" afterPath="$PROJECT_DIR$/jars/candidate-service.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jars/discovery-server.jar" beforeDir="false" afterPath="$PROJECT_DIR$/jars/discovery-server.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jars/interviewer-service.jar" beforeDir="false" afterPath="$PROJECT_DIR$/jars/interviewer-service.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jars/loadbalancer.jar" beforeDir="false" afterPath="$PROJECT_DIR$/jars/loadbalancer.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jenkins-emulatior.sh" beforeDir="false" afterPath="$PROJECT_DIR$/jenkins-emulatior.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/backend/candidate-service.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/backend/candidate-service.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/backend/discovery-server.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/backend/discovery-server.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/backend/interviewer-service.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/backend/interviewer-service.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/backend/loadbalancer.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/backend/loadbalancer.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/frontend/candidate-frontend.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/frontend/candidate-frontend.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/frontend/interviewer-frontend.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/frontend/interviewer-frontend.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/k8s/sql/mysql-service.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/k8s/sql/mysql-service.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="CSS File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;farmanahmed888&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/farmanahmed888/SPEProject.git&quot;,
    &quot;accountId&quot;: &quot;4f647ed7-969a-4cf8-b951-48c73259c55a&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="PackageJsonUpdateNotifier">
    <dismissed value="$PROJECT_DIR$/frontend/codeeditor/package.json" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2pKHxevmXRfEMRc8lVGDafmGxv3" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Docker.docker-compose.yml.codeeditor-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.discovery-server: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.interview-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.interviewer-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "experimenta",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/swadik/Documents/GitHub/SPEProject",
    "list.type.of.created.stylesheet": "CSS",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.fileTypes",
    "ts.external.directory.path": "/Users/farmanahmed/Applications/IntelliJ IDEA Ultimate.app/Contents/plugins/javascript-plugin/jsLanguageServicesImpl/external",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/frontend-docker-files" />
      <recent name="$PROJECT_DIR$/service-docker-files" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/roles/pull-docker-images/tasks" />
      <recent name="$PROJECT_DIR$/frontend/interviewer/src/pages/css" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.interviewer-service: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.codeeditor-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="codeeditor-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.discovery-server: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="discovery-server" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.interview-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="interview-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.interviewer-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="interviewer-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.interviewer-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.discovery-server: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.interview-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.codeeditor-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.22562.145" />
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-IU-243.22562.145" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c021f9aa-2a17-46c9-8d3e-5c10ddd09a7d" name="Changes" comment="" />
      <created>1732508094400</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1732508094400</updated>
      <workItem from="1732508096006" duration="34000" />
      <workItem from="1732979226368" duration="14905000" />
      <workItem from="1733034776260" duration="5026000" />
      <workItem from="1733462173806" duration="606000" />
      <workItem from="1733464038193" duration="2549000" />
      <workItem from="1733748167010" duration="1828000" />
      <workItem from="1733802805448" duration="71976000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>